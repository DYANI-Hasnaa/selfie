

SYM_SLL is similir to SYM_LEQ.


// ------------------------ GLOBAL CONSTANTS -----------------------
uint64_t CHAR_LT           = '<';
uint64_t CHAR_GT           = '>';




// ---------------------    C O M P I L E R    ---------------------
// ---------------------------- SCANNER ----------------------------

// ------------------------ GLOBAL CONSTANTS ----------------------- (Exists)
uint64_t SYM_SLL          = 28; // <<
uint64_t SYM_SRL          = 29; // >>

// ------------------------- INITIALIZATION ------------------------
  *(SYMBOLS + SYM_SLL)          = (uint64_t) "<<";
  *(SYMBOLS + SYM_SRL)          = (uint64_t) ">>";



// ------------------------ ENCODER/DECODER ------------------------


// -------------------------- Binary ---------------------
void emit_srl(uint64_t rd, uint64_t rs1, uint64_t rs2);
void emit_ssl(uint64_t rd, uint64_t rs1, uint64_t rs2);


// ------------------------ GLOBAL CONSTANTS -----------------------

// -------------- f3-codes
uint64_t F3_SLL   = 1; // 001
uint64_t F3_SRL   = 5; // 101

// -------------- f7-codes
uint64_t F7_SLL  = 0;  // 0000000
uint64_t F7_SRL  = 0;  // 0000000


// -----------------    A R C H I T E C T U R E    -----------------
// ---------------------------- MEMORY -----------------------------
// ------------------------- INSTRUCTIONS --------------------------

void do_sll();
void do_srl();


